CREATE TABLE IF NOT EXISTS users (
  id VARCHAR PRIMARY KEY,
  created_at TIMESTAMP,
  updated_at TIMESTAMP,
  email VARCHAR(40) UNIQUE,
  phone VARCHAR(25) UNIQUE,
  password VARCHAR(200),
  role VARCHAR(15)
);

CREATE TABLE IF NOT EXISTS applications (
  client_id VARCHAR PRIMARY KEY,
  client_secret VARCHAR(100),
  name VARCHAR(50),
  homepage_url VARCHAR(300),
  description VARCHAR(240),
  redirect_uri TEXT NOT NULL,
  scope VARCHAR(200),
  created_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS redirect_uris (
  id VARCHAR PRIMARY KEY,
  name VARCHAR
);

CREATE TABLE IF NOT EXISTS applications_redirect_uris (
  client_id VARCHAR REFERENCES applications(client_id),
  redirect_uri_id VARCHAR REFERENCES redirect_uris(id),
  PRIMARY KEY (client_id, redirect_uri_id)
);

CREATE TABLE IF NOT EXISTS grant_types (
  id VARCHAR PRIMARY KEY,
  name VARCHAR
);

CREATE TABLE IF NOT EXISTS applications_grant_types (
  client_id VARCHAR REFERENCES applications(client_id),
  grant_type_id VARCHAR REFERENCES grant_types(id),
  PRIMARY KEY (client_id, grant_type_id)
);

CREATE TABLE access_tokens (
  access_token VARCHAR(60) PRIMARY KEY,
  token_type VARCHAR(10) NOT NULL,
  refresh_token VARCHAR(60),
  id_token VARCHAR(300),
  created_at TIMESTAMP,
  expires_in INTEGER NOT NULL,
  scope VARCHAR(200),
  user_id VARCHAR REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE temporary_sessions (
  state VARCHAR(36) PRIMARY KEY,
  code VARCHAR(50) NOT NULL,
  user_id VARCHAR NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  code_challenge VARCHAR(40),
  code_challenge_method VARCHAR(10),
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  expires_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  client_id VARCHAR NOT NULL REFERENCES applications(client_id) ON DELETE CASCADE
);




CREATE TABLE assigned_applications_to_users (
  client_id VARCHAR REFERENCES applications(client_id) ON DELETE CASCADE,
  user_id VARCHAR NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  PRIMARY KEY (client_id, user_id)
);



















